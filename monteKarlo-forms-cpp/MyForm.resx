<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="nPoints.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="nPointsInside.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="square.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="mkSquare.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="accuracy.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="time.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="nPoints.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="nPointsInside.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="square.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="mkSquare.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="accuracy.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="time.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>